version: '2'
services:
  postgres:
    image: postgres:latest
    volumes:
      - /var/lib/postgresql/data
      - /backups
    env_file: .env


  rabbitmq:
    image: rabbitmq:latest

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.1
    container_name: elasticsearch1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet


  app:
    build: .
    depends_on:
      - postgres
      - rabbitmq
      - elasticsearch1
      - elasticsearch2
    volumes:
      - ./app:/inst_challenge/app
      - ./config:/inst_challenge/config
      - ./lib:/inst_challenge/lib
      - ./Gemfile:/inst_challenge/Gemfile
    ports:
      - '3000:3000'
    entrypoint:
      - /entrypoint.sh
    env_file:
      - .env

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

networks:
  esnet:
    driver: bridge